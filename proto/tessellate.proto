syntax = "proto3";

package tsocial.tessellate.server;

import "google/api/annotations.proto";
import "github.com/lyft/protoc-gen-validate/validate/validate.proto";

option go_package = "github.com/tsocial/tessellate/server";

service Tessellate {
  rpc SaveWorkspace (SaveWorkspaceRequest) returns (Ok) {
    option (google.api.http) = {
      post: "/v1/workspace"
      body: "*"
    };
  }
  rpc GetWorkspace (GetWorkspaceRequest) returns (Workspace) {
    option (google.api.http) = {
      get: "/v1/workspace/{Id}"
    };
  }
  rpc GetWorkspaceLayouts (GetWorkspaceLayoutsRequest) returns (Layouts) {
    option (google.api.http) = {
      get: "/v1/workspace/{Id}/layouts"
    };
  }
  rpc SaveLayout (SaveLayoutRequest) returns (Ok) {
    option (google.api.http) = {
      post: "/v1/workspace/{WorkspaceId}/layout"
      body: "*"
    };
  }
  rpc GetLayout (LayoutRequest) returns (Layout) {
    option (google.api.http) = {
      get: "/v1/workspace/{WorkspaceId}/layout/{Id}"
    };
  }

  rpc ApplyLayout (ApplyLayoutRequest) returns (JobStatus) {
    option (google.api.http) = {
      post: "/v1/workspace/{WorkspaceId}/layout/{Id}/apply"
      body: "*"
    };
  }
  rpc DestroyLayout (DestroyLayoutRequest) returns (JobStatus) {
    option (google.api.http) = {
      delete: "/v1/workspace/{WorkspaceId}/layout/{Id}/destroy"
    };
  }

  rpc AbortJob (JobRequest) returns (Ok) {}
  rpc StartWatch (StartWatchRequest) returns (Ok) {}
  rpc StopWatch (StopWatchRequest) returns (Ok) {}
  rpc GetState (GetStateRequest) returns (GetStateResponse) {}
  rpc GetOutput (GetOutputRequest) returns (GetOutputResponse) {}
  rpc GetAllWorkspaces(Ok) returns (AllWorkspaces) {}
}

enum Errors {
  NOT_ALLOWED = 0;
  NOT_FOUND = 1;
  LOCKED = 2;
  INTERNAL_ERROR = 3;
  INVALID_VALUE = 4;
  MISSING_VALUE = 5;
}

enum Status {
  INACTIVE = 0;
  ACTIVE = 1;
}

enum JobState {
  PENDING = 0;
  RUNNING = 1;
  FAILED = 2;
  ABORTED = 3;
  DONE = 4;
  ERROR = 5;
}

enum Operation {
  APPLY = 0;
  DESTROY = 1;
}

message GetWorkspaceRequest {
  string Id = 1 [(validate.rules).string.min_len = 1];
}

message Workspace {
  string Name = 1;
  bytes Vars = 2;
  string Version = 3;
  repeated string Versions = 4;
}

message AllWorkspaces {
  repeated Workspace Workspaces = 1;
}

message Layouts {
  repeated Layout layouts = 1;
}

message Layout {
  string Workspaceid = 1;
  string Id = 2;
  bytes Plan = 3;
  Status Status = 5;
}

message SaveWorkspaceRequest {
  string Id = 1 [(validate.rules).string.min_len = 1];
  bytes Providers = 2;
}

message GetWorkspaceLayoutsRequest {
  string Id = 1 [(validate.rules).string.min_len = 1];
}

message JobStatus {
  string Id = 1;
  JobState status = 2;
  // repeated bytes output = 3;
  // repeated bytes error = 4;
}

message Vars {
  bytes Vars = 1;
}

message JobRequest {
  string Id = 1 [(validate.rules).string.min_len = 1];
}

message Ok {}

message LayoutRequest {
  string WorkspaceId = 1 [(validate.rules).string.min_len = 1];
  string Id = 2 [(validate.rules).string.min_len = 1];
}

message SaveLayoutRequest {
  string WorkspaceId = 1 [(validate.rules).string.min_len = 1];
  string Id = 2 [(validate.rules).string.min_len = 1];
  bytes Plan = 3;
}

message SetLayoutStatusRequest {
  string WorkspaceId = 1 [(validate.rules).string.min_len = 1];
  string Id = 2 [(validate.rules).string.min_len = 1];
  string Status = 3;
}

message ApplyLayoutRequest {
  string WorkspaceId = 1 [(validate.rules).string.min_len = 1];
  string Id = 2 [(validate.rules).string.min_len = 1];
  bytes Vars = 3;
  bool dry = 4;
  int64 Retry = 5;
}

message DestroyLayoutRequest {
  string WorkspaceId = 1 [(validate.rules).string.min_len = 1];
  string Id = 2 [(validate.rules).string.min_len = 1];
  bytes Vars = 3;
  int64 Retry = 5;
}

message StartWatchRequest {
  string WorkspaceId = 1 [(validate.rules).string.min_len = 1];
  string Id = 2 [(validate.rules).string.min_len = 1];
  string SuccessCallback = 3;
  string FailureCallback = 4;
}

message StopWatchRequest {
  string WorkspaceId = 1 [(validate.rules).string.min_len = 1];
  string Id = 2 [(validate.rules).string.min_len = 1];
}

message GetStateRequest {
  string WorkspaceId = 1 [(validate.rules).string.min_len = 1];
  string LayoutId = 2 [(validate.rules).string.min_len = 1];
}

message GetStateResponse {
  bytes state = 1;
}

message GetOutputRequest {
  string WorkspaceId = 1 [(validate.rules).string.min_len = 1];
  string LayoutId = 2 [(validate.rules).string.min_len = 1];
}

message GetOutputResponse {
  bytes output = 1;
}
